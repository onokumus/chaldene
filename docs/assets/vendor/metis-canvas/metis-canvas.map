{"version":3,"sources":["app.js"],"sourcesContent":[";(function($) {\n  'use strict';\n\n  var MetisCanvas = function(element, options) {\n    this.$element = $(element);\n    this.options = $.extend({}, MetisCanvas.DEFAULTS, options);\n    this.$trigger = $('[data-toggle=\"canvas\"][href=\"#' + element.id + '\"],' +\n      '[data-toggle=\"canvas\"][data-target=\"#' + element.id + '\"]');\n\n    if (this.options.parent) {\n      this.$parent = this.getParent();\n    } else {\n      this.addAriaCollapsedClass(this.$element, this.$trigger);\n    }\n  };\n\n  MetisCanvas.DEFAULTS = {\n    toggle: true,\n    openClass: 'is-open'\n  };\n\n  MetisCanvas.prototype.show = function() {\n    var openClass = this.options.openClass;\n    this.$element\n      .addClass(openClass)\n      .attr('aria-expanded', true);\n\n    this.$trigger\n      .attr('aria-expanded', true);\n  };\n\n  MetisCanvas.prototype.hide = function() {\n    var openClass = this.options.openClass;\n    this.$element\n      .removeClass(openClass)\n      .attr('aria-expanded', false);\n\n    this.$trigger\n      .attr('aria-expanded', false);\n  };\n\n  MetisCanvas.prototype.toggle = function() {\n    var openClass = this.options.openClass;\n    this[this.$element.hasClass(openClass) ? 'hide' : 'show']();\n  };\n\n  MetisCanvas.prototype.getParent = function() {\n    return $(this.options.parent)\n      .find('[data-toggle=\"canvas\"][data-parent=\"' + this.options.parent + '\"]')\n      .each($.proxy(function(i, element) {\n        var $element = $(element);\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element);\n      }, this))\n      .end();\n  };\n\n  MetisCanvas.prototype.addAriaCollapsedClass = function($element, $trigger) {\n    var openClass = this.options.openClass;\n    var isOpen = $element.hasClass(openClass);\n\n    $trigger.attr('aria-expanded', isOpen);\n    $element\n      .toggleClass(openClass, !isOpen)\n      .attr('aria-expanded', isOpen);\n  };\n\n  function getTargetFromTrigger($trigger) {\n    var href;\n    var target = $trigger.attr('data-target') || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '');\n\n    return $(target);\n  }\n\n  function Plugin(option) {\n    return this.each(function() {\n      var $this = $(this);\n      var data = $this.data('canvas');\n      var options = $.extend({},\n        MetisCanvas.DEFAULTS,\n        $this.data(),\n        typeof option === 'object' && option);\n\n      if (!data && options.toggle && /show|hide/.test(option)) {\n        options.toggle = false;\n      }\n      if (!data) {\n        $this.data('canvas', (data = new MetisCanvas(this, options)));\n      }\n      if (typeof option === 'string') {\n        data[option]();\n      }\n    });\n  }\n\n  var old = $.fn.canvas;\n\n  $.fn.canvas = Plugin;\n  $.fn.canvas.Constructor = MetisCanvas;\n\n  // CANVAS NO CONFLICT\n  // ====================\n\n  $.fn.canvas.noConflict = function() {\n    $.fn.canvas = old;\n    return this;\n  };\n\n  $(document).on('click.canvas.data-api', '[data-toggle=\"canvas\"]', function(e) {\n    var $this = $(this);\n\n    if (!$this.attr('data-target')) {\n      e.preventDefault();\n    }\n\n    var $target = getTargetFromTrigger($this);\n    var data = $target.data('canvas');\n    var option = data ? 'toggle' : $this.data();\n\n    Plugin.call($target, option);\n  });\n})(jQuery);\n"],"names":[],"mappingsfile":"metis-canvas.js"}