/* ==========================================================================
   suitcss-utils-size
   ========================================================================== */


/**
 * https://github.com/suitcss/utils-size
 */


 /* Intrinsic widths
    ========================================================================== */

 /**
  * Make an element shrink wrap its content.
  */

 .u-sizeFit {
   flex-basis: auto !important;
 }

 /**
  * Make an element fill the remaining space.
  *
  * 1. Be explicit to work around IE10 bug with shorthand flex
  *    http://git.io/vllC7
  * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
  *    http://git.io/vllMt
  */

 .u-sizeFill {
   flex: 1 1 0% !important; /* 1 */
   flex-basis: 0% !important; /* 2 */
 }

 /**
  * An alternative method to make an element fill the remaining space.
  * Distributes space based on the initial width and height of the element
  *
  * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
  */

 .u-sizeFillAlt {
   flex: 1 1 auto !important;
   flex-basis: auto !important;
 }

 /**
  * Make an element the width of its parent.
  */

 .u-sizeFull {
   width: 100% !important;
 }

 /* Proportional widths
    ========================================================================== */


 /**
  *
  * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
  *    http://git.io/vllMD
  */

 .col-xs-1, .col-sm-1, .col-md-1, .col-lg-1, .col-xs-2, .col-sm-2, .col-md-2, .col-lg-2, .col-xs-3, .col-sm-3, .col-md-3, .col-lg-3, .col-xs-4, .col-sm-4, .col-md-4, .col-lg-4, .col-xs-5, .col-sm-5, .col-md-5, .col-lg-5, .col-xs-6, .col-sm-6, .col-md-6, .col-lg-6, .col-xs-7, .col-sm-7, .col-md-7, .col-lg-7, .col-xs-8, .col-sm-8, .col-md-8, .col-lg-8, .col-xs-9, .col-sm-9, .col-md-9, .col-lg-9, .col-xs-10, .col-sm-10, .col-md-10, .col-lg-10, .col-xs-11, .col-sm-11, .col-md-11, .col-lg-11, .col-xs-12, .col-sm-12, .col-md-12, .col-lg-12 {
   flex-basis: auto !important;
   /* 1 */
 }

 /* ==========================================================================
    suitcss-utils-position
    ========================================================================== */


 /**
  * https://github.com/suitcss/utils-position
  */

  .u-posFit,
  .u-posAbsoluteCenter,
  .u-posAbsolute {
    position: absolute !important;
  }

  /**
   * Element will be centered to its nearest relatively-positioned
   * ancestor.
   */

  .u-posFixedCenter,
  .u-posAbsoluteCenter {
    left: 50% !important;
    top: 50% !important;
    transform: translate(-50%, -50%) !important;
  }

  .u-posFit,
  .u-posFullScreen {
    bottom: 0 !important;
    left: 0 !important;
    margin: auto !important;
    right: 0 !important;
    top: 0 !important;
  }

  /**
   * 1. Make sure fixed elements are promoted into a new layer, for performance
   *    reasons.
   */

  .u-posFullScreen,
  .u-posFixedCenter,
  .u-posFixed {
    backface-visibility: hidden; /* 1 */
    position: fixed !important;
  }

  .u-posRelative {
    position: relative !important;
  }

  .u-posStatic {
    position: static !important;
  }

  /**
  * 1. only firefox
  *
  */

  .u-posSticky {
    position: sticky; /* 1 */
    top: 0;
  }

/* ==========================================================================
   suitcss-utils-display
   ========================================================================== */


/**
 * https://github.com/suitcss/utils-display
 */

 .u-block {
   display: block !important;
 }

 .u-hidden {
   display: none !important;
 }

 /**
  * Completely remove from the flow but leave available to screen readers.
  */

 .u-hiddenVisually {
   border: 0 !important;
   clip: rect(1px, 1px, 1px, 1px) !important;
   height: 1px !important;
   overflow: hidden !important;
   padding: 0 !important;
   position: absolute !important;
   width: 1px !important;
 }

 .u-inline {
   display: inline !important;
 }

 /**
  * 1. Fix for Firefox bug: an image styled `max-width:100%` within an
  * inline-block will display at its default size, and not limit its width to
  * 100% of an ancestral container.
  */

 .u-inlineBlock {
   display: inline-block !important;
   max-width: 100%; /* 1 */
 }

 .u-table {
   display: table !important;
 }

 .u-tableCell {
   display: table-cell !important;
 }

 .u-tableRow {
   display: table-row !important;
 }
